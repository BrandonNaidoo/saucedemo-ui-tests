name: Run UI Tests

on:
  push:
    branches:
      - '*'
  pull_request:
    types: [opened, synchronize, reopened]
  schedule:
    - cron: '0 0 1 * *'
  workflow_dispatch:

env:
  BASE_URL: ${{ vars.BASE_URL }}

jobs:
  cypress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress tests
        run: npm run test:cypress
        env:
          CYPRESS_baseUrl: ${{ env.BASE_URL }}

  playwright:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm run test:playwright:ci
        env:
          BASE_URL: ${{ env.BASE_URL }}

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm ci

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  zap-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: ${{ env.BASE_URL }}
        continue-on-error: true

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: zap-report.html
